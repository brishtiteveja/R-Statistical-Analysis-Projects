#7.1
nextX<-function(x){
xt<-c(0,0) #nextX
det<-runif(1)
 if(det>=0.5){ #x[1]:fixed
  z[1]<-x[1]
  z[2]<-rnorm(1,0.5*x[1],0.75)
 }else{ #x[2]:fixed
  z[1]<-rnorm(1,0.5*x[2],0.75)
  z[2]<-x[2]
 }
return (z)
}

my.mvtrnorm.gibbs<-function(n){
 x<-matrix(c(rep(1:n),rep(1:n)),2,n)
 x[1,1]=0
 x[2,1]=0
 for(i in 1:(n-1)){
  tmp<-c(x[1,i],x[2,i])
  ret<-nextX(tmp)
  x[1,i+1]<-ret[1]
  x[2,i+1]<-ret[2]
 }
 plot(x[1,],x[2,],pch=16,cex=0.3)

 return (0) #void
}

my.mvtrnorm.gibbs(10000)












#7.2

rndnorm<-function(lower,upper,mn,s){
 x<-runif(1)
 x<-x*(upper-lower)+lower
 return (qnorm(x,mn,s))
}

nextX<-function(x){
z<-c(0,0) #nextX
det<-runif(1)
 if(det>=0.5){ #x[1]:fixed
  mn<-0.5*x[1]
  s<-0.75
  lower<-pnorm(x[1]*x[1]-4*x[1]+6,mn,s)
  upper<-1
  z[1]<-x[1]
  z[2]<-rndnorm(lower,upper,mn,s)
 }else{ #x[2]:fixed
  mn<-0.5*x[2]
  s<-0.75
  lower<-pnorm(2-sqrt(x[2]-2),mn,s)
  upper<-pnorm(2+sqrt(x[2]-2),mn,s)
  z[1]<-rndnorm(lower,upper,mn,s)
  z[2]<-x[2]
 }
return (z)
}

my.mvtrnorm.gibbs2<-function(n){
 x<-matrix(c(rep(1:n),rep(1:n)),2,n)
 x[1,1]=3
 x[2,1]=3
 for(i in 1:(n-1)){
  tmp<-c(x[1,i],x[2,i])
  ret<-nextX(tmp)
  x[1,i+1]<-ret[1]
  x[2,i+1]<-ret[2]
 }
 plot(x[1,],x[2,],pch=16,cex=0.3)
 return (0) #void
}

my.mvtrnorm.gibbs2(10000)







#7.3
nextX<-function(x){
xt<-c(0,0) #nextX
det<-runif(1)
 if(det>=0.5){ #x[1]:fixed
  z[1]<-x[1]
  z[2]<-rnorm(1,0.5*x[1],0.75)
 }else{ #x[2]:fixed
  z[1]<-rnorm(1,0.5*x[2],0.75)
  z[2]<-x[2]
 }
return (z)
}

isSatisfy<-function(x){
if(x[1]*x[1]-4*x[1]-x[2]+6<0){ return (1)
}else{ return (0)}
}

my.mvtrnorm.gibbs3<-function(n){
 x<-matrix(c(rep(1:n),rep(1:n)),2,n)
 x[1,1]=3
 x[2,1]=3
 for(i in 1:(n-1)){
  tmp<-c(x[1,i],x[2,i])
  ret<-nextX(tmp)
  while(isSatisfy(ret)==0){
   ret<-nextX(ret)
  }
  x[1,i+1]<-ret[1]
  x[2,i+1]<-ret[2]
 }
 plot(x[1,],x[2,],pch=16,cex=0.3)

 return (0) #void
}

my.mvtrnorm.gibbs3(1000)




